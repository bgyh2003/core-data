!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).MyLib={})}(this,function(t){"use strict";class e{constructor(t){this.data=t}get(t){return this.data[t]}set(t,e){this.data[t]=e}update(t){return Object.assign(this.data,t),Object.keys(t)}export(){return JSON.parse(JSON.stringify(this.data))}}class s{constructor(){this.listeners=[]}addListener(t,e=[],s=[]){this.listeners.push({callback:t,keys:e,channels:s})}removeListener(t){this.listeners=this.listeners.filter(e=>e.callback!==t)}clearListeners(){this.listeners=[]}trigger(t,e,s=[]){this.listeners.forEach(({keys:a,callback:r,channels:i})=>{(0===s.length||0===i.length||s.some(t=>i.includes(t)))&&(0===a.length||e.some(t=>a.includes(t)))&&r(t,e,s)})}}t.CoreData=class{constructor(t){this.dataStorage=new e(t),this.dataEvent=new s}get(t){return this.dataStorage.get(t)}set(t,e,s=[]){this.dataStorage.set(t,e),this.dataEvent.trigger(this.dataStorage.data,[t],s)}export(){return this.dataStorage.export()}update(t,e=[]){const s=this.dataStorage.update(t);this.dataEvent.trigger(this.dataStorage.data,s,e)}addListener(t,e=[],s=[]){this.dataEvent.addListener(t,e,s)}removeListener(t){this.dataEvent.removeListener(t)}clearListeners(){this.dataEvent.clearListeners()}},t.DataEvent=s,t.DataStorage=e});
//# sourceMappingURL=index.umd.js.map
